#!/bin/bash

## This file is part of Whonix.
## Copyright (C) 2012 - 2014 Patrick Schleizer <adrelanos@riseup.net>
## See the file COPYING for copying conditions.

## Debugging.
## TODO: remove
set -x
env

if [ -f /usr/lib/pre.bsh ]; then
   source /usr/lib/pre.bsh
fi

set -e

true "
#####################################################################
## INFO: BEGIN: $DPKG_MAINTSCRIPT_PACKAGE $DPKG_MAINTSCRIPT_NAME ${1+"$@"}
#####################################################################
"

first_install_postinst() {
   if [ -e /var/lib/anon-gw-anonymizer-config/first_install_postinst.skip ]; then
      return 0
   fi
   if [ -e /var/lib/anon-gw-anonymizer-config/first_install_postinst.done ]; then
      return 0
   fi

   folder_list="
      /var/lib/anon-gw-anonymizer-config/initial-packages
      /var/cache/anon-gw-anonymizer-config/apt-get
      /var/cache/anon-gw-anonymizer-config/apt-get/var/lib/apt/lists/partial
      /var/cache/anon-gw-anonymizer-config/apt-get/var/cache/apt/archives/partial
      /var/cache/anon-gw-anonymizer-config/dpkg
   "

   for folder in $folder_list ; do
      rm -rf "$folder"
      mkdir --parents "$folder"
   done

   ## apt-get refuses to work without a valid dpkg status file.
   cp /var/lib/dpkg/status /var/cache/anon-gw-anonymizer-config/dpkg/status

   ## Change directory into the folder where downloaded packages should be stored.
   pushd /var/lib/anon-gw-anonymizer-config/initial-packages >/dev/null

   [ -n "$EMPTY_DIR" ] || EMPTY_DIR="$(mktemp --directory)"

   mkdir --parents "$EMPTY_DIR"

   ## Debugging.
   true "UWT_DEV_PASSTHROUGH: $UWT_DEV_PASSTHROUGH"

   ## TODO
   ## Debugging.
   export UWT_VERBOSE=1
   true "UWT_VERBOSE: UWT_VERBOSE"

   ## Debugging.
   ## Override with || true in case not installed.
   ## This is the case when --no-default-applications is being used.
   which torsocks || true
   which uwt || true

   ## TODO
   if [ "$apt_get_update_wrapper" = "" ]; then
      apt_get_update_wrapper="apt-get"
   fi

   ## If file /etc/apt/sources.list.d/torproject.list did not exist, apt-apt
   ## would fail open and exit 0.
   $apt_get_update_wrapper \
      $apt_get_gpgv_opts \
      $apt_timeout_opts \
      $apt_misc_opts \
      -o Dir="/var/cache/anon-gw-anonymizer-config/apt-get" \
      -o Dir::State::status="/var/cache/anon-gw-anonymizer-config/dpkg/status" \
      -o Dir::Etc="/etc/apt/" \
      -o Dir::Etc::sourcelist="/etc/apt/sources.list.d/torproject.list" \
      -o Dir::Etc::sourceparts="$EMPTY_DIR" \
      update

   ## Downloading deb.torproject.org-keyring Debian package, which helps to keep Torprojects signing key current.
   ## Also downloading tor tor-geoipdb from The Tor Projects repository.
   apt-get \
      $apt_timeout_opts \
      $apt_misc_opts \
      --yes \
      -o Dir="/var/cache/anon-gw-anonymizer-config/apt-get" \
      -o Dir::State::status="/var/cache/anon-gw-anonymizer-config/dpkg/status" \
      -o Dir::Etc="/etc/apt/" \
      -o Dir::Etc::sourcelist="/etc/apt/sources.list.d/torproject.list" \
      -o Dir::Etc::sourceparts="$EMPTY_DIR" \
      download deb.torproject.org-keyring tor tor-geoipdb

   mkdir --parents /var/lib/anon-gw-anonymizer-config
   touch /var/lib/anon-gw-anonymizer-config/first_install_postinst.done
}

configure_function() {
   addgroup --quiet debian-tor 2>/dev/null || true

   ## Add user "user" to the group "debian-tor", so user "user" can access Tor's control port.
   ## User "user" already exists thanks to the anon-base-files package.
   addgroup --quiet user debian-tor

   ## force-reload Tor, if running.
   service_tor_status_exit_code="0"
   service tor@default status >/dev/null 2>&1 || { service_tor_status_exit_code="$?" ; true; };
   if [ "$service_tor_status_exit_code" = "0" ]; then
      ## || true to avoid an error in case Tor's init script has been
      ## chmodded -x in meanwhile or in case the original config is erroneous.
      service tor@default force-reload || true
   fi
}



case "$1" in
   configure)
      true "INFO: Configuring $DPKG_MAINTSCRIPT_PACKAGE..."

      first_install_postinst
      configure_function

      true "INFO: End configuring $DPKG_MAINTSCRIPT_PACKAGE."

      ;;

   *)
      ;;
esac

true "INFO: debhelper beginning here."

#DEBHELPER#

true "INFO: Done with debhelper."

true "
#####################################################################
## INFO: END  : $DPKG_MAINTSCRIPT_PACKAGE $DPKG_MAINTSCRIPT_NAME ${1+"$@"}
#####################################################################
"

## Explicitly "exit 0", so eventually trapped errors can be ignored.
exit 0
